# Default :: EN - English (US)

# Logger Levels

logger.level.SEVERE     = SEVERE
logger.level.WARNING    = WARNING
logger.level.INFO       = INFO
logger.level.CONFIG     = CONFIG
logger.level.FINE       = FINE
logger.level.FINER      = FINER
logger.level.FINEST     = FINEST

# -[ LocaleService ]- #
locale = Locale
locale.debug.addWatchedLocale   = Added locale %s to watch list
locale.getString.notFound       = Failed to get localized string for key '%s' (not found)
locale.getString.missingParams  = Failed to get localized string for key '%s' (insufficient parameters)

# -[ PluginLoader ]- #
pluginLoader = Plugin Loader
pluginLoader.const                       = Started plugin loader initialization
pluginLoader.debug.const.pluginFolder    = Loading plugins from %s
pluginLoader.const.skippedReasonSafeMode = Skipped loading plugins (disabled in safe mode)
# plugin loading stages
pluginLoader.debug.const.loadJars               = Loading plugin jars
pluginLoader.debug.const.loadJars.plugin        = Loading plugin jar %s
pluginLoader.const.loadJars.jarMalformedURL     = Failed to load plugin %s (malformed URL)
pluginLoader.debug.const.loadJars.count         = %s/%s files found as plugin jars

pluginLoader.debug.const.loadPluginYML               = Loading plugin ymls
pluginLoader.debug.const.loadPluginYML.load          = Loading plugin yml for %s at %s
pluginLoader.const.loadPluginYML.classLoaderSecurity = Failed to create URLClassLoader for %s (permission denied)
pluginLoader.const.loadPluginYML.missingYML          = Failed to load plugin.yml for %s (not found)
pluginLoader.const.loadPluginYML.classLoaderCloseIO  = Failed to close URLClassLoader for %s
pluginLoader.debug.const.loadPluginYML.count         = %s plugins found with a plugin.yml (%s)

pluginLoader.debug.const.loadValid              = Loading valid plugins
pluginLoader.debug.const.loadValid.read         = Reading yml for %s at %s
pluginLoader.const.loadValid.malformedYML       = Failed to load plugin.yml for %s (invalid syntax)
pluginLoader.const.loadValid.missingRequiredKV  = Failed to load plugin.yml for %s (missing a required key)
pluginLoader.const.loadValid.openStreamFailed   = Failed to load plugin.yml for %s (I/O exception)
pluginLoader.const.loadValid.closeStreamFailed  = Failed to close stream for %s (I/O exception)
pluginLoader.debug.const.loadValidMain          = Loading main class for %s at %s
pluginLoader.const.loadValidMain.missingMain        = Failed to load main class for %s (not found)
pluginLoader.const.loadValidMain.mainDidNotExtends  = Failed to load main class %s (did not extend WebDirPlugin)
pluginLoader.debug.const.loadValid.count        = %s plugins found with valid plugin.yml(s) (%s)

pluginLoader.debug.const.loadValidDeps               = Loading plugins with valid dependencies
pluginLoader.debug.const.loadValidDepsCheck          = Checking dependencies for %s
pluginLoader.const.loadValidDeps.missingDependencies = Failed to load %s (missing dependencies %s)
pluginLoader.const.loadValidDeps.circularDependency  = Failed to load %s (a circular dependency was detected)
pluginLoader.debug.const.loadValidDeps.count         = %s plugins found with valid dependencies (%s)

pluginLoader.debug.const.sortDeps        = Sorting dependencies
pluginLoader.debug.const.sortDeps.loaded = Finished sorting dependencies

pluginLoader.debug.const.enable             = Enabling plugins
pluginLoader.debug.const.enable.plugin      = Enabling plugin %s
pluginLoader.debug.const.enable.missingDep  = Plugin %s managed to validate with missing dependencies: %s
pluginLoader.debug.const.enable.loadJar     = Loading jar classes for %s
pluginLoader.const.enable.classNotFound     = Failed to load jar classes for %s (not found)
pluginLoader.const.enable.failedLoadClass   = Failed to load jar classes for %s
pluginLoader.debug.const.enable.load        = Loading main class for %s
pluginLoader.const.enable.abstract          = Failed to load main class for %s (abstract class can not be instantiated)
pluginLoader.const.enable.constScope        = Failed to load main class for %s (constructor or class was not declared public)
pluginLoader.const.enable.constArgs         = Failed to load main class for %s (constructor had incorrect parameters)
pluginLoader.const.enable.constExceptions   = Failed to load main class for %s (exception in constructor)
pluginLoader.const.enable.sec               = Failed to load main class for %s (permission denied)
pluginLoader.debug.const.loader             = Started plugin loader for %s
pluginLoader.debug.const.loader.addRenderer = Added renderer %s for %s
pluginLoader.const.loader.timedOut          = Failed to load %s (timed out - took longer than %s)
pluginLoader.const.loader.failed            = Failed to load %s
pluginLoader.const.loader.uncaught          = Failed to load %s (exception in onEnable?)
pluginLoader.debug.const.loader.loaded      = %s plugins were able to load successfully (%s)
pluginLoader.const.loaded                   = Finished plugin loader initialization, loaded %s/%s plugins


# -[ PageRenderer ]- #
pageRenderer = Page Renderer
pageRenderer.const               = Started page renderer
pageRenderer.debug.const.default = Using %s as defaults directory

# /render/DefaultFrontMatterLoader
pageRenderer.debug.default.dir          = Loading defaults from %s for (source) %s
pageRenderer.debug.default.file         = Loading default file %s
pageRenderer.default.noDefaultFile      = Failed to load default file %s (not found)
pageRenderer.default.malformedYML       = Failed to load default file %s (invalid syntax)
pageRenderer.default.missingDefault     = Failed to load default file %s (key 'default' was not found)
pageRenderer.default.invalidDefaultType = Failed to load default file %s (key 'default' was not a map)
pageRenderer.debug.default.loaded       = Loaded %s/%s default files
pageRenderer.debug.default.getDefaultFrontMatter.file  = Loading default front matter for %s
pageRenderer.debug.default.getDefaultFrontMatter.path  = Constructed relative path %s
pageRenderer.debug.default.getDefaultFrontMatter.sort  = Sorted default front matter for %s as %s

pageRenderer.debug.const.source = Using %s as sources directory
pageRenderer.debug.const.output = Using %s as output directory

pageRenderer.const.failedCleanOutput = Failed to clear output directory (unable to delete file)

pageRenderer.debug.render               = Rendering %s
pageRenderer.render.noRenderDirectory   = Failed to render %s (file was a directory)
pageRenderer.debug.render.delete        = Deleting %s from output (source not found)
pageRenderer.render.failedDelete        = Failed to delete %s (I/O exception)
pageRenderer.render.failedRead          = Failed to read %s (I/O exception)
pageRenderer.debug.render.write         = Writing to %s
pageRenderer.debug.render.missingDir    = Failed to render %s (unable to create parent directory %s)

#/render/PageRenderer
pageRenderer.debug.PageRenderer.render       = Rendering %s \nDefault: %s\nContent: {\n%s\n}
pageRenderer.debug.PageRenderer.frontMatter  = Mapped front matter for %s: %s
pageRenderer.debug.PageRenderer.apply        = Applied renderer %s to %s\nWas: {\n%s\n}\nNow: {\n%s\n}

# /render/YamlFrontMatter
pageRenderer.yamlFrontMatter.getImports.circularImport  = Skipped loading imports for %s (already imported)
pageRenderer.debug.yamlFrontMatter.getImports           = Loading imports for %s; Config: %s; Checked: %s;
pageRenderer.debug.yamlFrontMatter.getImports.load      = Importing %s (%s) for %s
pageRenderer.yamlFrontMatter.getImports.notFound        = Failed to import config %s (not found)
pageRenderer.yamlFrontMatter.getImports.malformedYML    = Failed to import config %s (invalid syntax)
pageRenderer.debug.yamlFrontMatter.getRenderers         = Getting renderers from list %s
pageRenderer.debug.yamlFrontMatter.getRenderers.map     = Getting render from %s
pageRenderer.debug.yamlFrontMatter.getRenderers.match   = Matching renderer %s against %s

pageRenderer.yamlFrontMatter.getRenderers.missingKV  = Failed to load renderer from {%s} (missing required value 'plugin' or 'renderer')
# /render/PageRenderer
pageRenderer.pageRenderer.rendererUncaught = Failed to use renderer [%s] %s on %s (uncaught exception)

pageRenderer.render.failedWrite   = Failed to write to %s (I/O exception)
pageRenderer.render.writeSecurity = Failed to write to %s (permission denied)

pageRenderer.const.failedWalk = Failed to start rendering pages (I/O exception)
pageRenderer.const.loaded     = Rendered %s/%s files

# -[ Server ]- #
server = Server
server.const                    = Started preview server initialization
server.const.blockedPort        = Failed to start server on port %s (already taken)
server.const.invalidPort        = Failed to start server on port %s (invalid port)
server.const.failedCreate       = Failed to start server (I/O exception)
server.const.watch.init         = Creating watch service for output folder
server.debug.createWatchService = Creating watch service for %s
server.const.watch.interrupt    = Watch service has stopped
server.createWatchService.failedRegister = Failed to create watch service for %s (I/O exception)
server.createWatchService.failedWalk     = Failed to create watch service for files in %s (I/O exception)
server.const.watch.loaded       = Created watch service for output folder
server.const.start              = Started server
server.const.loaded             = Finished server initialization



# WebDir - Server

# -[ Renderer ]- #
exchangeRenderer = Exchange Renderer
exchangeRenderer.debug.render       = Rendering %s \nExchange: %s\nDefault: %s\nContent {\n%s\n}
exchangeRenderer.debug.permissions  = Using permissions %s for user %s
exchangeRenderer.failedRead         = Failed to read file %s (I/O exception)

fileRenderer = File Renderer

# -[ Permissions ]- #
permissions = Permissions
permissions.const                   = Started permissions initialization
permissions.debug.const.defPerm     = Loading default permissions from resource %s
permissions.const.default.missing   = Failed to load default permissions (not found)
permissions.const.default.malformed = Failed to load default permissions (invalid syntax)
permissions.const.default.closeIO   = Failed to close input stream for default permissions
permissions.debug.const.permFile    = Loading permissions file from %s
permissions.const.load.missing      = Permissions file not found, creating a new permissions file
permissions.const.load.default      = Created default permissions file
permissions.const.load.failedCopy   = Failed to save default permissions file
permissions.const.load.exists       = Failed to create default permissions file (already exists)
permissions.const.load.malformed    = Failed to load permissions file (invalid syntax)
permissions.const.load.closeIO      = Failed to close file reader for permissions file
permissions.const.loaded            = Finished permissions initialization

# /permissions/Permissions
permissions.Permissions.invalidGroupType = Failed to load group %s (group was not a map)
permissions.Permissions.invalidGroups    = Failed to load groups (groups was not a map)
permissions.Permissions.missingGroups    = Failed to load groups (not found)

permissions.Permissions.invalidUserType  = Failed to load user %s (user was not a map)
permissions.Permissions.invalidUser      = Failed to load user %s (address was invalid)
permissions.Permissions.invalidUsers     = Failed to load users (users was a not a map)
permissions.Permissions.missingUsers     = Failed to load users (not found)

# /permissions/PermissionsGroup
permissions.PermissionsGroup.missingInheritance = No inheritance found for group %s
permissions.PermissionsGroup.missingOptions     = No options found for group %s
permissions.PermissionsGroup.missingPermissions = No permissions found for group %s
# /permissions/PermissionsUser
permissions.PermissionsUser.missingGroups      = No groups found for user %s
permissions.PermissionsUser.missingOptions     = No options found for user %s
permissions.PermissionsUser.missingPermissions = No permissions found for user %s

# -[ Server ]- #
server.debug.const.port          = Creating server at port %s
server.const.createStaticHandler = Creating handler for output folder
server.const.createFileHandler   = Creating handler for root directories
server.debug.const.rootAdd       = Root %s has been added to the server at %s
server.debug.const.rootRemove    = Root %s has been removed from the server at %s
server.const.startFileHandler    = Started watch service for root directories
server.const.fileWatchInterrupt  = Root directory watch service was interrupted
