# Logger Service

logger.level.SEVERE     = SEVERE
logger.level.WARNING    = WARNING
logger.level.INFO       = INFO
logger.level.CONFIG     = CONFIG
logger.level.FINE       = FINE
logger.level.FINER      = FINER
logger.level.FINEST     = FINEST

loggerService = Logger Service
loggerService.const.started             = Started logger service initialization
loggerService.const.addHandler          = Added logger handler %s
loggerService.const.failedAddHandler    = Failed to start logger for %s \n %s
loggerService.const.finished            = Finished logger service initialization

# Config Service

configService = Configuration Service
configService.const.started             = Started configuration service initialization
configService.const.loadDefault         = Loading default configuration
# suppress inspection "TrailingSpacesInProperty"
configService.const.loadedDefault       = Loaded default configuration \n%s\n
configService.const.loadConfig          = Loading configuration from %s
configService.const.configNotFound      = Configuration file not found, creating a new configuration file
configService.const.failedCreateDirs    = Failed to create parent directories for %s
configService.const.failedCreateDefault = Failed to create default configuration file\n %s
configService.const.configAlreadyExists = Failed to create default configuration file (file already exists)\n %s
configService.const.invalidConfigSyntax = Failed to load configuration file (invalid syntax)\n %s
configService.const.finished            = Finished configuration service initialization

# Locale Service

localeService = Locale Service
localeService.const.started             = Started locale service initialization
localeService.const.setLocale           = Set current locale to %s
localeService.getString.notFound        = Failed to get localized string for key '%s' (not found)
localeService.getString.missingParams   = Failed to get localized string for key '%s' (insufficient parameters)
localeService.const.printQueuedMessages = Printing queued logger messages
localeService.const.finished            = Finished locale service initializations
localeService.setLocale.changed         = Changed locale from %s (%s) to %s (%s)
localeService.addWatchedLocale.added    = Added bundle %s to watch service

# Plugin Loader

pluginLoader = Plugin Loader
pluginLoader.const.started          = Started plugin loader
pluginLoader.const.safe             = Skipped plugin loader (application was in safe mode)
pluginLoader.const.filter.jar       = Filtering plugins that are jar files
pluginLoader.jarFilter.validFile    = Validated plugin file %s
pluginLoader.jarFilter.malformedURL = Failed to load plugin file %s (malformed URL)
pluginLoader.jarFilter.accessDenied = Failed to load plugin file %s (access denied)
pluginLoader.const.filter.yml               = Filtering plugins that contain 'plugin.yml'
pluginLoader.pluginYMLFilter.validFile      = Validated plugin file %s
pluginLoader.pluginYMLFilter.notFound       = Failed to load plugin file %s ('plugin.yml' not found)
pluginLoader.pluginYMLFilter.accessDenied   = Failed to load 'plugin.yml' for file %s (not found)
pluginLoader.pluginYMLFilter.failedClose    = Failed to close URLClassLoader for file %s
pluginLoader.const.filter.validYML                  = Filtering plugins that have a valid 'plugin.yml'
pluginLoader.validYMLFilter.validFile               = Validated 'plugin.yml' for file %s
pluginLoader.validYMLFilter.invalidPluginYMLSyntax  = Failed to read 'plugin.yml' for file %s (invalid syntax)
pluginLoader.validYMLFilter.missingRequired         = Failed to load 'plugin.yml' for file %s (missing required key)
pluginLoader.validYMLFilter.failedRead              = Failed to read 'plugin.yml' for file %s (failed to open stream)
pluginLoader.validYMLFilter.failedClose             = Failed to close InputStream for file %s
pluginLoader.const.filter.validDep              = Filtering plugins that have required dependencies
pluginLoader.validDepFilter.missingRequired     = Failed to load plugin %s (missing required dependency %s)
pluginLoader.validDepFilter.circularDependency  = Failed to load plugin %s (plugin had a circular dependency)
pluginLoader.const.filter.sortDep   = Sorting dependencies
pluginLoader.const.filter.main              = Initializing plugins
pluginLoader.mainFilter.missingRequired     = Failed to load plugin %s (plugin dependency failed to load %s)
pluginLoader.mainFilter.classLoader         = Loading java class files for plugin %s
pluginLoader.mainFilter.classNotFound       = Failed to load plugin %s (failed to load java class)
pluginLoader.mainFilter.malformedURL        = Failed to load plugin file %s (malformed URL)
pluginLoader.mainFilter.accessDenied        = Failed to load plugin file %s (access denied)
pluginLoader.mainFilter.failedClassLoader   = Failed to create URLCLassLoader for plugin file %s
pluginLoader.mainFilter.loadMain            = Loading main class for plugin %s
pluginLoader.mainFilter.classCast           = Failed to load main class for plugin %s (class did not extend WebDirPlugin)
pluginLoader.mainFilter.missingMain         = Failed to load main class for plugin %s ('plugin.yml' was missing required key 'main')
pluginLoader.mainFilter.missingClass        = Failed to load main class for plugin %s (not found)
pluginLoader.mainFilter.accessDeniedMain    = Failed to load main class for plugin %s (access denied)
pluginLoader.mainFilter.illegalAccess       = Failed to load main class for plugin %s (class was not public)
pluginLoader.mainFilter.illegalArgs         = Failed to load main class for plugin %s (failed to create plugin service)
pluginLoader.mainFilter.illegalScope        = Failed to load main class for plugin %s (class was abstract)
pluginLoader.mainFilter.exception           = Failed to load main class for plugin %s (constructor threw an exception)
pluginLoader.mainFilter.enable              = Running onEnable() for plugin %s
pluginLoader.mainFilter.timedOut            = Failed to load plugin %s (timed out - took longer than %s
pluginLoader.mainFilter.nullPlugin          = Failed to load plugin %s
pluginLoader.mainFilter.enableException     = Failed to load plugin %s (onEnable() threw an exception)
pluginLoader.const.loaded           = Loaded %s/%s plugins
pluginLoader.const.addRender        = Added renderer %s from plugin %s
pluginLoader.const.finished         = Finished plugin loading

# Page Rendering Service

pageRenderer = Page Rendering Service
pageRenderer.const.started = Started page rendering service initialization
pageRenderer.default.loadDefault    = Loading default file %s
pageRenderer.default.fileNotFound   = Failed to load default file %s (not found)
pageRenderer.default.invalidSyntax  = Failed to load default file %s (invalid syntax)
pageRenderer.default.path           = Getting default front matter for '%s'
pageRenderer.default.configs        = Loaded configs %s for '%s'
pageRenderer.const.failedDelete     = Failed to delete file %s
pageRenderer.const.failedClean      = Failed to clean output directory %s
pageRenderer.const.accessDenied     = Failed to render file %s (access denied)
pageRenderer.const.failedWrite      = Failed to write to %s
pageRenderer.const.failedCreate     = Failed to create output directory %s
pageRenderer.const.failedWalk       = Failed to walk through sources directory %s
pageRenderer.renderer               = Rendering file %s
pageRenderer.render.fileNotFound    = Failed to render file %s (file not found)
pageRenderer.render.parentNotFound  = Failed to render file %s (parent directory %s not found)
pageRenderer.render.rendered        = Rendered file %s to %s
pageRenderer.render.null            = Skipped output file %s (render was null)
pageRenderer.render.failedRead      = Failed to render file %s (failed to read file)
pageRenderer.render.outOfMemory     = Failed to render file %s (out of memory)
pageRenderer.render.accessDenied    = Failed to render file %s (read access denied)
pageRenderer.render.applyFrontMatter = Generating front matter for file %s
pageRenderer.render.frontMatter     = Generated front matter for file %s
pageRenderer.render.apply           = Applying renderer [%s] %s to file %s
pageRenderer.render.exception       = Failed to use renderer [%s] %s on file %s (renderer threw an exception)
pageRenderer.render.timedOut        = Failed to use renderer [%s] %s on file %s (timed out took longer than %s
pageRenderer.const.finished         = Rendered %s/%s files

permissions = Permissions Service
permissions.permissions.invalidGroupType    = Failed to create permissions group '%s' (was not a map)
permissions.permissions.invalidGroups       = Failed to create permissions groups (was not a map)
permissions.permissions.missingGroups       = Failed to create permissions groups (not found)
permissions.permissions.invalidUserType     = Failed to create permissions user '%s' (was not a map)
permissions.permissions.invalidUser         = Failed to create user '%s' (invalid user address)
permissions.permissions.invalidUsers        = Failed to create permissions users (was not a map)
permissions.permissions.missingUsers        = Failed to create permissions users (not found)

