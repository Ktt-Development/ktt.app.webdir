# Logger Service

logger.level.SEVERE     = SEVERE
logger.level.WARNING    = WARNING
logger.level.INFO       = INFO
logger.level.CONFIG     = CONFIG
logger.level.FINE       = FINE
logger.level.FINER      = FINER
logger.level.FINEST     = FINEST

loggerService = Logger Service
loggerService.const.started             = Started logger service initialization
loggerService.const.addHandler          = Added logger handler %s
loggerService.const.failedAddHandler    = Failed to start logger for %s \n %s
loggerService.const.finished            = Finished logger service initialization

# Config Service

configService = Configuration Service
configService.const.started             = Started configuration service initialization
configService.const.loadDefault         = Loading default configuration
# suppress inspection "TrailingSpacesInProperty"
configService.const.loadedDefault       = Loaded default configuration \n %s \n
configService.const.loadConfig          = Loading configuration from %s
configService.const.configNotFound      = Configuration file not found, creating a new configuration file
configService.const.failedCreateDefault = Failed to create default configuration file\n %s
configService.const.configAlreadyExists = Failed to create default configuration file (file already exists)\n %s
configService.const.invalidConfigSyntax = Failed to load configuration file (invalid syntax)\n %s
configService.const.finished            = Finished configuration service initialization

# Locale Service

localeService = Locale Service
localeService.const.started             = Started locale service initialization
localeService.const.setLocale           = Set current locale to %s
localeService.getString.notFound        = Failed to get localized string for key '%s' (not found)
localeService.getString.missingParams   = Failed to get localized string for key '%s' (insufficient parameters)
localeService.const.printQueuedMessages = Printing queued logger messages
localeService.const.finished            = Finished locale service initializations

# Plugin Loader

pluginLoader = Plugin Loader
pluginLoader.const.started  = Started plugin loader
pluginLoader.const.safe     = Skipped plugin loader (application was in safe mode)
pluginLoader.const.filter.jar   = Filtering plugins that are jar files